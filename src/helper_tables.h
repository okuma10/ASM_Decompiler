#pragma once

#ifndef _TABLES
#define _TABLES 1
unsigned char  opCodes[] = {34,     35,    40 };
char*          opNames[] = {"MOV", "MOV", "MOV"};
unsigned char regCodes[] = { 0,   1,   2,   3,   4,   5,   6,   7};
unsigned char modCodes[] = {0, 1, 2, 3};
char*   modNames[]  = {"mem","mem8", "mem16", "reg"};
char  subRegAccess[]= {  0,   0,   0,   0,    1,   1,   1,  1  };
char  subRegId[]    = {  0,   1,   2,   3,    0,   1,   2,  3  };
char* regNamesW0[]  = {"AL","CL","DL","BL", "AH", "CH","DH","BH"};
char* regNamesW1[]  = {"AX","CX","DX","BX","SP","BP","SI","DI"};
char* segRegNames[] = {"ES","CS","SS","DS"};
char* memNames0[]   = {"BX + SI", "BX + DI", "BP + SI", "BP + DI", "SI", "DI", "BP", "BX"};


typedef enum instructions{
    op_AAA = 0,
    op_AAD,
    op_AAM,
    op_AAS,
    op_ADC,
    op_ADD,
    op_AND,
    op_CALL,
    op_CBW,
    op_CLC,
    op_CLD,
    op_CLI,
    op_CMC,
    op_CMP,
    op_CMPSB,
    op_CMPSW,
    op_CWD,
    op_DAA,
    op_DAS,
    op_DEC,
    op_DIV,
    op_HLT,
    op_IDIV,
    op_IMUL,
    op_IN,
    op_INC,
    op_INT,
    op_INTO,
    op_IRET,
    op_JA,
    op_JAE,
    op_JB,
    op_JBE,
    op_JC,
    op_JCXZ,
    op_JE,
    op_JG,
    op_JGE,
    op_JL,
    op_JLE,
    op_JMP,
    op_JNA,
    op_JNAE,
    op_JNB,
    op_JNBE,
    op_JNC,
    op_JNE,
    op_JNG,
    op_JNGE,
    op_JNL,
    op_JNLE,
    op_JNO,
    op_JNP,
    op_JNS,
    op_JNZ,
    op_JO,
    op_JP,
    op_JPE,
    op_JPO,
    op_JS,
    op_JZ,
    op_LAHF,
    op_LDS,
    op_LEA,
    op_LES,
    op_LODSB,
    op_LODSW,
    op_LOOP,
    op_MOV,
    op_MUL,
    op_NEG,
    op_NOP,
    op_NOT,
    op_OR,
    op_OUT,
    op_POP,
    op_PUSH,
    op_RCL,
    op_RCR,
    op_REP,
    op_REPE,
    op_REPNE,
    op_REPNZ,
    op_REPZ,
    op_RET,
    op_RETF,
    op_ROL,
    op_ROR,
    op_SAHF,
    op_SAL,
    op_SAR,
    op_SBB,
    op_SCASB,
    op_SCASW,
    op_SHL,
    op_SHR,
    op_STC,
    op_STD,
    op_STI,
    op_STOSB,
    op_STOSW,
    op_SUB,
    op_TEST,
    op_XCHG,
    op_XLATB,
    op_XOR,
    op_PRFX,
    op_BOUND,
    op_ARPL,
    op_UNK,
    op_CDQ,
    op_WAIT,
    op_ENTER,
    op_LEAVE
}instructions;


char* instructionNames[] = {
    "AAA",
    "AAD",
    "AAM",
    "AAS",
    "ADC",
    "ADD",
    "AND",
    "CALL",
    "CBW",
    "CLC",
    "CLD",
    "CLI",
    "CMC",
    "CMP",
    "CMPSB",
    "CMPSW",
    "CWD",
    "DAA",
    "DAS",
    "DEC",
    "DIV",
    "HLT",
    "IDIV",
    "IMUL",
    "IN",
    "INC",
    "INT",
    "INTO",
    "IRET",
    "JA",
    "JAE",
    "JB",
    "JBE",
    "JC",
    "JCXZ",
    "JE",
    "JG",
    "JGE",
    "JL",
    "JLE",
    "JMP",
    "JNA",
    "JNAE",
    "JNB",
    "JNBE",
    "JNC",
    "JNE",
    "JNG",
    "JNGE",
    "JNL",
    "JNLE",
    "JNO",
    "JNP",
    "JNS",
    "JNZ",
    "JO",
    "JP",
    "JPE",
    "JPO",
    "JS",
    "JZ",
    "LAHF",
    "LDS",
    "LEA",
    "LES",
    "LODSB",
    "LODSW",
    "LOOP",
    "MOV",
    "MUL",
    "NEG",
    "NOP",
    "NOT",
    "OR",
    "OUT",
    "POP",
    "PUSH",
    "RCL",
    "RCR",
    "REP",
    "REPE",
    "REPNE",
    "REPNZ",
    "REPZ",
    "RET",
    "RETF",
    "ROL",
    "ROR",
    "SAHF",
    "SAL",
    "SAR",
    "SBB",
    "SCASB",
    "SCASW",
    "SHL",
    "SHR",
    "STC",
    "STD",
    "STI",
    "STOSB",
    "STOSW",
    "SUB",
    "TEST",
    "XCHG",
    "XLATB",
    "XOR",
    "PRFX",
    "BOUND",
    "ARPL",
    "UNK",
    "CDQ",
    "WAIT",
    "ENTER",
    "LEAVE"
};

unsigned char cmdIDTable[16*16]={
    /*          0        1        2         3        4        5        6        7        8         9         A         B         C         D         E         F    */
    /* 0 */   op_ADD,  op_ADD,  op_ADD,   op_ADD,  op_ADD,  op_ADD,  op_PUSH, op_POP,  op_OR,    op_OR,    op_OR,    op_OR,    op_OR,    op_OR,    op_PUSH,  255,
    /* 1 */   op_ADC,  op_ADC,  op_ADC,   op_ADC,  op_ADC,  op_ADC,  op_PUSH, op_POP,  op_SBB,   op_SBB,   op_SBB,   op_SBB,   op_SBB,   op_SBB,   op_PUSH,  op_POP,
    /* 2 */   op_AND,  op_AND,  op_AND,   op_AND,  op_AND,  op_AND,  op_PRFX, op_DAA,  op_SUB,   op_SUB,   op_SUB,   op_SUB,   op_SUB,   op_SUB,   op_PRFX,  op_DAS,
    /* 3 */   op_XOR,  op_XOR,  op_XOR,   op_XOR,  op_XOR,  op_XOR,  op_PRFX, op_AAA,  op_CMP,   op_CMP,   op_CMP,   op_CMP,   op_CMP,   op_CMP,   op_PRFX,  op_AAS,
    /* 4 */   op_INC,  op_INC,  op_INC,   op_INC,  op_INC,  op_INC,  op_INC,  op_INC,  op_DEC,   op_DEC,   op_DEC,   op_DEC,   op_DEC,   op_DEC,   op_DEC,   op_DEC,
    /* 5 */   op_PUSH, op_PUSH, op_PUSH,  op_PUSH, op_PUSH, op_PUSH, op_PUSH, op_PUSH, op_POP,   op_POP,   op_POP,   op_POP,   op_POP,   op_POP,   op_POP,   op_POP,
    /* 6 */   op_PUSH, op_POP,  op_BOUND, op_ARPL, op_PRFX, op_PRFX, op_PRFX, op_PRFX, op_PUSH,  op_IMUL,  op_PUSH,  op_IMUL,  op_IN,    op_IN,    op_OUT,   op_OUT,
    /* 7 */   op_JMP,  op_JMP,  op_JMP,   op_JMP,  op_JMP,  op_JMP,  op_JMP,  op_JMP,  op_JMP,   op_JMP,   op_JMP,   op_JMP,   op_JMP,   op_JMP,   op_JMP,   op_JMP,
    /* 8 */   op_ADD,  op_ADD,  op_ADD,   op_ADD,  op_TEST, op_TEST, op_XCHG, op_XCHG, op_MOV,   op_MOV,   op_MOV,   op_MOV,   op_MOV,   op_LEA,   op_MOV,   op_POP,
    /* 9 */   op_NOP,  op_XCHG, op_XCHG,  op_XCHG, op_XCHG, op_XCHG, op_XCHG, op_XCHG, op_CWD,   op_CDQ,   op_CALL,  op_WAIT,  op_PUSH,  op_POP,   op_SAHF,  op_LAHF, 
    /* A */   op_MOV,  op_MOV,  op_MOV,   op_MOV,  op_MOV,  op_MOV,  op_CMP,  op_CMP,  op_TEST,  op_TEST,  op_STOSB, op_STOSB, op_LODSB, op_LODSB, op_SCASB, op_SCASB,
    /* B */   op_MOV,  op_MOV,  op_MOV,   op_MOV,  op_MOV,  op_MOV,  op_MOV,  op_MOV,  op_MOV,   op_MOV,   op_MOV,   op_MOV,   op_MOV,   op_MOV,   op_MOV,   op_MOV,
    /* C */   op_UNK,  op_UNK,  op_RET,   op_RET,  op_LES,  op_LDS,  op_MOV,  op_MOV,  op_ENTER, op_LEAVE, op_RET,   op_RET,   op_INT,   op_INT,   op_INTO,  op_RET,
    /* D */   op_UNK,  op_UNK,  op_UNK,   op_UNK,  op_AAM,  op_AAD,  op_UNK,  op_UNK,  op_UNK,   op_UNK,   op_UNK,   op_UNK,   op_UNK,   op_UNK,   op_UNK,   op_UNK,
    /* E */   op_JMP,  op_JMP,   op_JMP,  op_JMP,  op_IN,   op_IN,   op_OUT,  op_OUT,  op_CALL,  op_JMP,   op_JMP,   op_JMP,   op_IN,    op_IN,    op_OUT,   op_OUT,
    /* F */   op_PRFX, op_UNK,  op_PRFX,  op_PRFX, op_HLT,  op_CMC,  op_TEST, op_TEST, op_CLC,   op_STC,   op_CLI,   op_STI,   op_CLD,   op_STD,   op_INC,   op_INC,
    };

#endif

